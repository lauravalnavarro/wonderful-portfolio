{"ast":null,"code":"import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport var defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\nexport function throttle(durationSelector, config) {\n  if (config === void 0) {\n    config = defaultThrottleConfig;\n  }\n\n  return operate(function (source, subscriber) {\n    var leading = config.leading,\n        trailing = config.trailing;\n    var hasValue = false;\n    var sendValue = null;\n    var throttled = null;\n    var isComplete = false;\n\n    var endThrottling = function () {\n      throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n      throttled = null;\n\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n\n    var cleanupThrottling = function () {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n\n    var startThrottle = function (value) {\n      return throttled = innerFrom(durationSelector(value)).subscribe(new OperatorSubscriber(subscriber, endThrottling, cleanupThrottling));\n    };\n\n    var send = function () {\n      if (hasValue) {\n        hasValue = false;\n        var value = sendValue;\n        sendValue = null;\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      hasValue = true;\n      sendValue = value;\n      !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n    }, function () {\n      isComplete = true;\n      !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/throttle.ts"],"names":[],"mappings":"AAGA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AACA,SAAS,SAAT,QAA0B,yBAA1B;AAOA,OAAO,IAAM,qBAAqB,GAAmB;AACnD,EAAA,OAAO,EAAE,IAD0C;AAEnD,EAAA,QAAQ,EAAE;AAFyC,CAA9C;AAiDP,OAAM,SAAU,QAAV,CACJ,gBADI,EAEJ,MAFI,EAE0C;AAA9C,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,qBAAA;AAA8C;;AAE9C,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AACxB,QAAA,OAAO,GAAe,MAAM,CAArB,OAAP;AAAA,QAAS,QAAQ,GAAK,MAAM,CAAX,QAAjB;AACR,QAAI,QAAQ,GAAG,KAAf;AACA,QAAI,SAAS,GAAa,IAA1B;AACA,QAAI,SAAS,GAAwB,IAArC;AACA,QAAI,UAAU,GAAG,KAAjB;;AAEA,QAAM,aAAa,GAAG,YAAA;AACpB,MAAA,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CAAE,WAAX,EAAA;AACA,MAAA,SAAS,GAAG,IAAZ;;AACA,UAAI,QAAJ,EAAc;AACZ,QAAA,IAAI;AACJ,QAAA,UAAU,IAAI,UAAU,CAAC,QAAX,EAAd;AACD;AACF,KAPD;;AASA,QAAM,iBAAiB,GAAG,YAAA;AACxB,MAAA,SAAS,GAAG,IAAZ;AACA,MAAA,UAAU,IAAI,UAAU,CAAC,QAAX,EAAd;AACD,KAHD;;AAKA,QAAM,aAAa,GAAG,UAAC,KAAD,EAAS;AAC7B,aAAC,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,KAAD,CAAjB,CAAT,CAAmC,SAAnC,CAA6C,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,aAAnC,EAAkD,iBAAlD,CAA7C,CAAb;AAAgI,KADlI;;AAGA,QAAM,IAAI,GAAG,YAAA;AACX,UAAI,QAAJ,EAAc;AAIZ,QAAA,QAAQ,GAAG,KAAX;AACA,YAAM,KAAK,GAAG,SAAd;AACA,QAAA,SAAS,GAAG,IAAZ;AAEA,QAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;AACA,SAAC,UAAD,IAAe,aAAa,CAAC,KAAD,CAA5B;AACD;AACF,KAZD;;AAcA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,kBAAJ,CACE,UADF,EAOE,UAAC,KAAD,EAAM;AACJ,MAAA,QAAQ,GAAG,IAAX;AACA,MAAA,SAAS,GAAG,KAAZ;AACA,QAAE,SAAS,IAAI,CAAC,SAAS,CAAC,MAA1B,MAAsC,OAAO,GAAG,IAAI,EAAP,GAAY,aAAa,CAAC,KAAD,CAAtE;AACD,KAXH,EAYE,YAAA;AACE,MAAA,UAAU,GAAG,IAAb;AACA,QAAE,QAAQ,IAAI,QAAZ,IAAwB,SAAxB,IAAqC,CAAC,SAAS,CAAC,MAAlD,KAA6D,UAAU,CAAC,QAAX,EAA7D;AACD,KAfH,CADF;AAmBD,GAzDa,CAAd;AA0DD","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport var defaultThrottleConfig = {\n    leading: true,\n    trailing: false,\n};\nexport function throttle(durationSelector, config) {\n    if (config === void 0) { config = defaultThrottleConfig; }\n    return operate(function (source, subscriber) {\n        var leading = config.leading, trailing = config.trailing;\n        var hasValue = false;\n        var sendValue = null;\n        var throttled = null;\n        var isComplete = false;\n        var endThrottling = function () {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        var cleanupThrottling = function () {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        var startThrottle = function (value) {\n            return (throttled = innerFrom(durationSelector(value)).subscribe(new OperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        };\n        var send = function () {\n            if (hasValue) {\n                hasValue = false;\n                var value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, function () {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=throttle.js.map"]},"metadata":{},"sourceType":"module"}